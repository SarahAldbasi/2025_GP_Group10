rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    // Allow admin users full access to all collections
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow authenticated users to read their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      // Allow creation of the first admin user
      allow create: if !exists(/databases/$(database)/documents/users/admin);
      // Allow read for authenticated users
      allow read: if isAuthenticated();
      // Allow write for admins or the user themselves
      allow write: if isAdmin() || isOwner(userId);
    }

    // Matches collection
    match /matches/{matchId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Verification requests collection
    match /verificationRequests/{requestId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}